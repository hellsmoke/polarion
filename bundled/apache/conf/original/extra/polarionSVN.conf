<IfModule !mod_dav.c>
LoadModule dav_module modules/mod_dav.so
</IfModule>
<IfModule !mod_dav_fs.c>
LoadModule dav_fs_module modules/mod_dav_fs.so
</IfModule>

<IfModule !mod_dav_svn.c>
LoadModule dav_svn_module modules/mod_dav_svn.so
</IfModule>
<IfModule !mod_authz_svn.c>
LoadModule authz_svn_module modules/mod_authz_svn.so
</IfModule>

#<IfModule !mod_ldap.c>
#LoadModule ldap_module modules/mod_ldap.so
#</IfModule>
#<IfModule !mod_authnz_ldap.c>
#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
#</IfModule>

<IfModule mod_dav_svn.c>

# Configuration of caching for optimization of the Subversion performance:
# - for more details consult read http://svnbook.red-bean.com/en/1.8/svn.serverconfig.optimization.html
# - applicable to Subversion 1.9 and newer
# - uses default configuration of caching and dynamic allocation of the cache size
SVNInMemoryCacheSize 0
# - if Subversion is on localhost you may want to disable the compression to conserve CPU resources
#SVNCompressionLevel 0

<Location /repo>

# Enable Web DAV HTTP access methods
DAV svn
# Repository location
SVNPath "#RepositoryPath#/repo"
# Write requests from WebDAV clients result in automatic commits
SVNAutoversioning on

# Our access control policy
AuthzSVNAccessFile "#RepositoryPath#/access"

# No anonymous access, always require authenticated users
Require valid-user

# How to authenticate a user. (NOTE: Polarion does not currently support HTTP Digest access authentication.)
AuthType Basic
AuthName "Subversion repository"
AuthUserFile "#RepositoryPath#/passwd"

# To enable authentication against LDAP:
# - ensure that modules mod_authnz_ldap and mod_ldap are loaded: uncomment
#   corresponding LoadModule directives at the beginning of this file
# - uncomment LDAP options below
# Documentation of used LDAP module and its parameters (for Apache 2.4.x) is available at
#   http://httpd.apache.org/docs/2.4/mod/mod_authnz_ldap.html
#   http://httpd.apache.org/docs/2.4/mod/mod_ldap.html
<IfModule mod_authnz_ldap.c>

	# Authenticate against both passwd file and LDAP
	# - allows to combine Polarion-only users with organization-wide users
	AuthBasicProvider file ldap

	# LDAP search URL
	# - LDAP port is 389
	# - use ldaps:// for secure LDAP (with port 636)
	# - basedn is the DN of the directory (sub)tree to search in
	# - attribute is the name of user id attribute (used as "Login Name" in Polarion)
	# - scope is the search scope ("sub" for whole subtree under basedn)
	# - fiter is the search filter
	# - see more examples below
	#AuthLDAPURL "ldap://host:port/basedn?attribute?scope?filter"

	# OpenLDAP and other directories using RFC-2798-compliant inetOrgPerson object class
	#AuthLDAPURL "ldap://host:port/dc=company,dc=com?uid?sub?(objectclass=inetOrgPerson)"

	# Active Directory
	#AuthLDAPURL "ldap://host:port/cn=users,dc=company,dc=com?sAMAccountName?sub?(objectclass=user)"

	# The user and password used to login to LDAP server to perform the searches
	# - required by Active Directory
	#AuthLDAPBindDN "cn=[USER],cn=users,dc=company,dc=com"
	#AuthLDAPBindPassword "[PASSWORD]"
	
	#Uncomment this when "500 Server failed" is returned and Apache's log contains error 
	#"This function has not been implemented on this platform: AH01277: LDAP: Unable to add rebind cross reference entry. Out of memory?"
	#LDAPReferrals Off 
    
</IfModule>

</Location>

</IfModule>
