/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2017-05-15 10:09:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.polarion.platform.i18n.Localization;
import com.polarion.core.util.EscapeChars;
import com.polarion.psvn.launcher.internal.activation.ActivationData;

public final class online_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.polarion.core.util.EscapeChars");
    _jspx_imports_classes.add("com.polarion.psvn.launcher.internal.activation.ActivationData");
    _jspx_imports_classes.add("com.polarion.platform.i18n.Localization");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
response.setHeader("Pragma", "no-cache");
response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
response.setDateHeader("Expires", 0);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(EscapeChars.forHTMLTag(Localization.getString("activation.online.title"))), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("submitLabel", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( EscapeChars.forJavascriptString(Localization.getString("activation.button.submit.activate")) ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("submittingLabel", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( EscapeChars.forJavascriptString(Localization.getString("activation.button.submit.activating")) ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("successLabel", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( EscapeChars.forJavascriptString(Localization.getString("activation.message.activationSuccessful", "/polarion")) ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("onlineActivation", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function submitForm() {\r\n");
      out.write("\tvar confirmed = confirm('");
      out.print( EscapeChars.forJavascriptString(Localization.getString("activation.message.noOtherInstancesConfirmation")) );
      out.write("');\r\n");
      out.write("\t   if(confirmed) {\r\n");
      out.write("\t\t   var formData = JSON.stringify($(\"#activationForm\").serializeObject());\r\n");
      out.write("\t\t   $.ajax({\r\n");
      out.write("\t\t\t   url: \"");
      out.print( ActivationData.getInstance().getGeneratorUrl() );
      out.write("\",\r\n");
      out.write("\t\t\t   contentType: \"application/json\",\r\n");
      out.write("\t\t\t   dataType: \"json\",\r\n");
      out.write("\t\t       type: 'POST',\r\n");
      out.write("\t\t       data: formData,\r\n");
      out.write("\t\t       success: function(result, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\t\tshowActivating(false)\r\n");
      out.write("\t\t\t\t\t\t\tsubmitLicense(result);\r\n");
      out.write("\t\t               },\r\n");
      out.write("\t\t       error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t       \t\t\tshowActivating(false)\r\n");
      out.write("\t\t       \t\t\tswitch(jqXHR.status) {\r\n");
      out.write("\t\t       \t\t\t\tcase 0:\r\n");
      out.write("\t\t       \t\t\t\t\tvar message = {content: \"");
      out.print( EscapeChars.forJavascriptString(Localization.getString("activation.online.message.activationServerNotReachable", "/polarion/activate/offline")));
      out.write("\", html: true};\r\n");
      out.write("\t\t       \t\t\t\t\tsetMessageText(message, true);\r\n");
      out.write("\t\t       \t\t\t\t\tbreak;\r\n");
      out.write("\t\t       \t\t\t\tcase 404:\r\n");
      out.write("\t\t       \t\t\t\t\tvar message = {content: \"");
      out.print( EscapeChars.forJavascriptString(Localization.getString("activation.online.message.activationServerNotAvailable", "/polarion/activate/offline")));
      out.write("\", html: true};\r\n");
      out.write("\t\t       \t\t\t\t\tsetMessageText(message, true);\r\n");
      out.write("\t\t       \t\t\t\t\tbreak;\r\n");
      out.write("\t\t       \t\t\t\tdefault:\r\n");
      out.write("\t\t       \t\t\t\t\tvar errorText = \"");
      out.print( EscapeChars.forJavascriptString(Localization.getString("activation.online.message.activationServerCommunicationFailedWithStatus", "/polarion/activate/offline", "%code%")) );
      out.write("\";\r\n");
      out.write("\t\t       \t\t\t\t\tsetMessage(errorText.replace(\"%code%\", jqXHR.status + \" - \" + jqXHR.statusText), true);\r\n");
      out.write("\t\t       \t\t\t\t\tvar message = {content: errorText, html: true};\r\n");
      out.write("\t\t       \t\t\t\t\tsetMessageText(message, true);\r\n");
      out.write("\t\t       \t\t\t\t\tbreak;\r\n");
      out.write("\t\t       \t\t\t}\r\n");
      out.write("\t\t               },\r\n");
      out.write("\t\t       cache: false\r\n");
      out.write("\t\t   });\r\n");
      out.write("\t   } else {\r\n");
      out.write("\t       showActivating(false)\r\n");
      out.write("\t   }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function submitLicense(result) {\r\n");
      out.write("\t\t   $.ajax({\r\n");
      out.write("\t\t       type: 'POST',\r\n");
      out.write("\t\t       data: result,\r\n");
      out.write("\t\t       dataType: \"json\",\r\n");
      out.write("\t\t       success: function(result, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\t\tshowActivating(false)\r\n");
      out.write("\t\t\t    \t\t\thandleResult(result);\r\n");
      out.write("\t\t               },\r\n");
      out.write("\t\t       error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t       \t\t\tshowActivating(false)\r\n");
      out.write("\t\t       \t\t\tsetMessage(\"");
      out.print( EscapeChars.forJavascriptString(Localization.getString("activation.message.serverCommunicationFailed")) );
      out.write("\", true);\r\n");
      out.write("\t\t               },\r\n");
      out.write("\t\t       cache: false\r\n");
      out.write("\t\t   });\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("$.fn.serializeObject = function()\r\n");
      out.write("{\r\n");
      out.write("    var o = {};\r\n");
      out.write("    var a = this.serializeArray();\r\n");
      out.write("    $.each(a, function() {\r\n");
      out.write("        if (o[this.name] !== undefined) {\r\n");
      out.write("            if (!o[this.name].push) {\r\n");
      out.write("                o[this.name] = [o[this.name]];\r\n");
      out.write("            }\r\n");
      out.write("            o[this.name].push(this.value || '');\r\n");
      out.write("        } else {\r\n");
      out.write("            o[this.name] = this.value || '';\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    return o;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("    $(\"#productKeyInput\").keydown(function() {\r\n");
      out.write("    \tvalidate();\r\n");
      out.write("    });\r\n");
      out.write("    $(\"#productKeyInput\").bind('input propertychange', function() {\r\n");
      out.write("    \tvalidate();\r\n");
      out.write("\t});\r\n");
      out.write("\t$(\"#productKeyInput\").focus();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function validate() {\r\n");
      out.write("    var productKey = $(\"#productKeyInput\").val();\r\n");
      out.write("    var enableSubmit = false;\r\n");
      out.write("    if (productKey) {\r\n");
      out.write("    \tenableSubmit = true;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    setMessage(\"\", true);\r\n");
      out.write("    setSubmitEnabled(enableSubmit);\r\n");
      out.write("    return enableSubmit;\r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("<div id=\"heading\">");
      out.print(Localization.getString("activation.online.title"));
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<form id=\"activationForm\" action=\"/polarion/activate/online\" method=\"post\" enctype=\"application/x-www-form-urlencoded\" >\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"boxInputLabel\">\r\n");
      out.write("\t\t<label for=\"productKeyInput\">");
      out.print( Localization.getString("activation.licenseKey"));
      out.write("</label>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"box\">\r\n");
      out.write("\t\t<input id=\"productKeyInput\" class=\"input\" type=\"text\" name=\"licenseKey\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"boxInfoLong\">\r\n");
      out.write("\t\t");
      out.print( Localization.getString("activation.licenseKey.info") );
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("          \r\n");
      out.write("\t<div class=\"boxSubmitSeparator\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"submit\">\r\n");
      out.write("        <input name=\"hardwareKey\" type=\"hidden\" value=\"");
      out.print( ActivationData.getInstance().getHardwareKey() );
      out.write("\"/>\r\n");
      out.write("        <input name=\"productVersion\" type=\"hidden\" value=\"");
      out.print( ActivationData.getInstance().getProductVersion() );
      out.write("\"/>\r\n");
      out.write("    \t<input id=\"submitButton\" class=\"bigButton\" name=\"submit\" type=\"button\" value=\"");
      out.print( Localization.getString("activation.button.submit.activate") );
      out.write("\" />\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<div class=\"bottomNote\">\r\n");
      out.write("\t");
      out.print( Localization.getString("activation.online.noInternetConnection", "/polarion/activate/offline") );
      out.write("\r\n");
      out.write("\t&nbsp;&nbsp;\r\n");
      out.write("\t<a class=\"polarionLink\" href=\"");
      out.print(System.getProperty("com.polarion.activation.activationHelpLink"));
      out.write('"');
      out.write('>');
      out.print( Localization.getString("activation.link.activationHelp"));
      out.write("</a>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"copyright\">");
      out.print( Localization.getString("login.copyRightMessage") );
      out.write("</div>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
